version: '3.8'

services:
    api:
        container_name: api
        build:
            context: ./docker/nodejs
            dockerfile: Dockerfile
        depends_on:
            - mysql
        restart: always
        ports:
            - 3030:3030
        volumes:
            - ./api:/www
        networks:
            - backend-network
        command: npm install
        command: npm start
    mysql:
        container_name: mysql
        image: mysql:latest
        ports:
            - 3306:3306
        networks:
            - backend-network
        volumes:
            - ./volumes/mysql:/var/lib/mysql
        environment:
            - MYSQL_ROOT_PASSWORD=toor1234
            - MYSQL_DATABASE=db1
            - MYSQL_USER=user1
            - MYSQL_PASSWORD=1234
    mongo:
        container_name: mongo
        image: mongo:latest
        ports:
            - 27017-27019:27017-27019
        networks:
            - backend-network
        volumes:
            - ./configs/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
            - ./volumes/mongo:/data/db
        environment:
            - MONGO_INITDB_DATABASE=db8
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=toor1234
    redis:
        container_name: redis
        image: bitnami/redis:latest
        ports:
            - 6379:6379
        networks:
            - backend-network
        volumes:
            - ./volumes/redis:/bitnami/redis/data
        environment:
            - REDIS_PASSWORD=1234

networks:
    backend-network:

